"use strict";

var appUpdateTemplate = "<div id='update-txt'><div>Catch up with the latest version.</div><button id='update-app'>Update</button><button id='ignore-update'>Ignore</button></div>";

var offlineTemplate = '<div>You are offline. All that you see could be outdated.</div>';

var generateInjector = function generateInjector(_ref) {
    var fileName = _ref.fileName;
    return "\nconst messageHandler = (event) => {\n    if (event.data === 'RELOAD') {\n        location.reload();\n    }\n};\n\nconst createFrame = (id, innerHTML, classList) => {\n    const frame  = document.createElement('div');\n    frame.setAttribute('id', id);\n    frame.innerHTML = innerHTML;\n    frame.classList.add(classList);\n    return frame;\n}\n\nconst hideFrame = (id) => document.getElementById(id).classList.add('hidden-frame');\n\nconst showFrame = (id) => document.getElementById(id).classList.remove('hidden-frame');\n\naddEventListener('offline', () => showFrame(\"offline-notification-frame\"));\n\naddEventListener('online', () => hideFrame(\"offline-notification-frame\"));\n\nvar refreshing;\n\nnavigator.serviceWorker.addEventListener('controllerchange',\n  function() {\n    if (refreshing) return;\n    refreshing = true;\n    window.location.reload();\n  }\n);\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('./" + fileName + "')\n        .then((reg) => {\n            const appUpdateContainer = createFrame(\"app-update-frame\",\"" + appUpdateTemplate + "\", ['hidden-frame']);\n            const offlineMessageContainer = createFrame(\"offline-notification-frame\", \"" + offlineTemplate + "\", ['hidden-frame']);\n            document.body.appendChild(appUpdateContainer); \n            document.body.appendChild(offlineMessageContainer); \n            document.getElementById('ignore-update').addEventListener('click', () => hideFrame('app-update-frame'));\n            reg.addEventListener('updatefound', (e)  => {\n                const newWorker = reg.installing;\n                newWorker && newWorker.addEventListener('statechange', (e) => {\n                    if (navigator.serviceWorker.controller && reg.waiting && e.target.state === 'installed') {\n                        const awaitingSW = reg.waiting;\n                        showFrame('app-update-frame')\n                        document.getElementById('update-app').addEventListener('click', () => {\n                            awaitingSW.postMessage({\n                                type: 'SKIP-WAITING',\n                            });\n                        });\n                    }\n                })\n            });\n            navigator.serviceWorker.addEventListener('message', messageHandler);\n        }, (err) => {\n            throw new Error('Service worker registration failed: ', err);\n        });\n}";
};

module.exports = {
    generateInjector: generateInjector
};